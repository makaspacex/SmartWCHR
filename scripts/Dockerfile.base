FROM ubuntu:22.04

ARG TARGETARCH
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8
ENV ROS_DISTRO=humble


RUN echo 'Asia/Shanghai' > /etc/timezone && \
    ln -fs /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

# some dependencies packages and update to lastest packages
RUN apt update && \
    apt install -y --no-install-recommends ca-certificates && \
    apt clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# mirror repo by bfsu
RUN if [ "$TARGETARCH" = "arm64" ]; then \
        echo "deb https://mirrors.bfsu.edu.cn/ubuntu-ports/ jammy main restricted universe multiverse" > /etc/apt/sources.list; \
        echo "deb https://mirrors.bfsu.edu.cn/ubuntu-ports/ jammy-updates main restricted universe multiverse" >> /etc/apt/sources.list; \
        echo "deb https://mirrors.bfsu.edu.cn/ubuntu-ports/ jammy-backports main restricted universe multiverse" >> /etc/apt/sources.list; \
        echo "deb https://mirrors.bfsu.edu.cn/ubuntu-ports/ jammy-security main restricted universe multiverse" >> /etc/apt/sources.list; \
    else \
        echo "deb https://mirrors.bfsu.edu.cn/ubuntu/ jammy main restricted universe multiverse" > /etc/apt/sources.list; \
        echo "deb https://mirrors.bfsu.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse" >> /etc/apt/sources.list; \
        echo "deb https://mirrors.bfsu.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse" >> /etc/apt/sources.list \
        echo "deb https://mirrors.bfsu.edu.cn/ubuntu/ jammy-security main restricted universe multiverse" >> /etc/apt/sources.list; \
    fi

# some dependencies packages and update to lastest packages
RUN apt update && \
    apt upgrade -y && \
    apt install -y --no-install-recommends file dirmngr gpg curl gnupg2 htop usbutils zsh tzdata vim tmux git python3-pip xauth  net-tools && \
    chsh -s /bin/zsh && \
    curl -o /usr/local/bin/gosu -SL "https://mirror.ghproxy.com/https://github.com/tianon/gosu/releases/latest/download/gosu-$(dpkg --print-architecture)" && \
    chmod +x /usr/local/bin/gosu && \
    apt clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Install ros-humble-ros-core
RUN curl -sSL https://mirror.ghproxy.com/https://raw.githubusercontent.com/ros/rosdistro/master/ros.key  -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] https://mirrors.bfsu.edu.cn/ros2/ubuntu jammy main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null && \
    apt update && \
    apt install -y --no-install-recommends \
    ros-$ROS_DISTRO-ros-core \
    ros-$ROS_DISTRO-demo-nodes-cpp ros-$ROS_DISTRO-demo-nodes-py \
    build-essential git python3-colcon-common-extensions python3-colcon-mixin python3-rosdep python3-vcstool \
    && apt clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# install livox sdk2
RUN git clone https://mirror.ghproxy.com/https://github.com/Livox-SDK/Livox-SDK2.git && \
    cd ./Livox-SDK2/ && mkdir build && cd build && \
    cmake .. && make -j && make install

# slam and wheel describesion
RUN apt update &&  \
    apt install -y --no-install-recommends \
    ros-$ROS_DISTRO-robot-state-publisher \
    ros-$ROS_DISTRO-joint-state-publisher-gui \
    ros-$ROS_DISTRO-cartographer ros-$ROS_DISTRO-cartographer-ros ros-$ROS_DISTRO-slam-toolbox \
    python3-argcomplete ros-$ROS_DISTRO-tf-transformations ros-$ROS_DISTRO-robot-localization && \
    apt clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

RUN apt update &&  \
    apt install -y --no-install-recommends \
    ros-$ROS_DISTRO-desktop-full && \
    apt clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


RUN apt update &&  \
    apt install -y --no-install-recommends \
    ros-$ROS_DISTRO-rmw-cyclonedds-cpp && \
    apt clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


# lsleida
RUN apt update &&  \
    apt install -y --no-install-recommends \
    libpcap-dev libboost1.74-dev \
    ros-$ROS_DISTRO-pcl-ros ros-$ROS_DISTRO-pluginlib ros-$ROS_DISTRO-pcl-conversions && \
    apt clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# navigation2
RUN apt update && \
    apt install -y --no-install-recommends \
    ros-$ROS_DISTRO-navigation2 \
    ros-$ROS_DISTRO-nav2-bringup && \
    apt clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# rtabmap-ros
RUN apt update && \
    apt install -y --no-install-recommends \
    ros-$ROS_DISTRO-rtabmap-ros && \
    apt clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# torch
RUN pip3 config set global.index-url https://mirrors.bfsu.edu.cn/pypi/web/simple && \
    pip3 install h5py==3.10 && \
    pip3 install pyserial numpy rich minimalmodbus transforms3d apscheduler cv_bridge scikit-learn && \
    pip3 install torch torchvision torchaudio

# install oh-my-zsh and tools
RUN sh -c "$(curl -fsSL https://mirror.ghproxy.com/https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" && \
    git clone https://mirror.ghproxy.com/https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions && \
    sed -i "s/plugins=(git.*)$/plugins=(git zsh-autosuggestions)/" ~/.zshrc

# update 
COPY ./ros_shell.sh /

# set workdir
WORKDIR /

CMD ["zsh"]
