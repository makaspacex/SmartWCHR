<?xml version="1.0"?>
<robot name="wheelchair_base" xmlns:xacro="http://ros.org/wiki/xacro">
  
  <!-- ****************** ROBOT CONSTANTS *******************************  -->
  <!-- Define the size of the robot's main chassis in meters -->
  <xacro:property name="base_width" value="0.435" />
  <xacro:property name="base_length" value="1.0" />
  <xacro:property name="base_height" value="0.6" />

  <!-- Define the shape of the robot's two back wheels in meters -->
  <xacro:property name="wheel_radius" value="0.27" />
  <xacro:property name="wheel_width" value="0.08" />
  <xacro:property name="wheel_ygap" value="${wheel_width/2+0.01}" />
  <xacro:property name="wheel_zoff" value="0.225" />
  <xacro:property name="wheel_xoff" value="0.325" />

  <xacro:property name="s_wheel_radius" value="0.08" />
  <xacro:property name="s_wheel_width" value="0.04" />
  <xacro:property name="s_wheel_ygap" value="${-0.002}" />
  <xacro:property name="s_wheel_zoff" value="${wheel_radius + wheel_zoff-s_wheel_radius}" />
  <xacro:property name="s_wheel_xoff" value="${wheel_xoff - 0.5}" /> 
  
  <!-- Define intertial property macros  -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}" />
      <mass value="${m}" />
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}"
        iyz="0.0" izz="${(m/12) * (w*w + h*h)}" />
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}" />
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy="-4.2369783e-11" ixz="0" iyy="${(m/12) * (3*r*r + h*h)}"
        iyz="0" izz="${(m/2) * (r*r)}" />
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}" />
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0"
        izz="${(2/5) * m * (r*r)}" />
    </inertial>
  </xacro:macro>

  <xacro:macro name="entity_material" params="color alpha">
    <material name="black">
      <color rgba="0.0 0.0 0.0 1.0" />
    </material>
  </xacro:macro>
  
  <xacro:property name="wheel_scale" value="${wheel_radius/0.275}" />
  <xacro:property name="s_wheel_scale" value="${s_wheel_radius*2/0.1905}" />

  <!-- *********************** DRIVE WHEELS ******************************  -->

  <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
      <xacro:property name="wheel_scale" value="${wheel_radius/0.275}" />
      <visual>
          <origin xyz="0 0 0" rpy="0 0 ${y_reflect * pi/2}" />
          <geometry>
            <mesh filename="package://nav2_sample/meshes/wheel2.STL"
              scale="${wheel_scale} ${wheel_scale} ${wheel_scale}" />
          </geometry>
          <material name="light_black" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}" />
        </geometry>
      </collision>
      <xacro:cylinder_inertia m="5.5" r="${wheel_radius}" h="${wheel_width}" />
    </link>
    <joint name="${prefix}_joint" type="continuous">
      <parent link="base_link" />
      <child link="${prefix}_link" />
      <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}"  rpy="0 0 0" />
      <axis xyz="0 1 0" />
      <!-- <limit upper="3.1415" lower="-3.1415" effort="30" velocity="5.0"/> -->
    </joint>
    <gazebo reference="${prefix}_link">
      <material>Gazebo/Black</material>
      <mu1>2.0</mu1>  <!-- 摩擦系数 -->
      <mu2>2.0</mu2>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="small_wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 ${y_reflect * pi/2}" />
        <geometry>
          <mesh filename="package://nav2_sample/meshes/small_wheel.STL" scale="${s_wheel_scale} ${s_wheel_scale} ${s_wheel_scale}" />
        </geometry>
        <material name="light_black" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${s_wheel_radius}" length="${s_wheel_width}" />
        </geometry>
      </collision>
      <xacro:cylinder_inertia m="1.5" r="${s_wheel_radius}" h="${s_wheel_width}" />
    </link>

    <joint name="${prefix}_joint" type="revolute">
      <parent link="base_link" />
      <child link="${prefix}_link" />
      <origin xyz="${x_reflect*s_wheel_xoff} ${y_reflect*(base_width/2+s_wheel_ygap)} ${-s_wheel_zoff}"
        rpy="0 0 0" />
      <axis xyz="0 1 0" />
      <limit upper="3.1415" lower="-3.1415" effort="30" velocity="5.0"/>
    </joint>
    <gazebo reference="${prefix}_link">
      <material>Gazebo/Black</material>
      <mu1>0.001</mu1>  <!-- 摩擦系数 -->
      <mu2>0.001</mu2>
    </gazebo>
  </xacro:macro>

  <!-- Init colour -->
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0" />
  </material>

  <material name="dark">
    <color rgba="0.3 0.3 0.3 1.0" />
  </material>

  <material name="light_black">
    <color rgba="0.7 0.7 0.7 1.0" />
  </material>

  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0" />
  </material>

  <material name="light_blue">
    <color rgba="${0/255} ${0/255} ${255/255} 0.5" />
  </material>

  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0" />
  </material>

  <material name="grey">
    <color rgba="0.5 0.5 0.5 1.0" />
  </material>

  <material name="orange">
    <color rgba="1.0 0.4235 0.0392 1.0" />
  </material>

  <material name="brown">
    <color rgba="0.8706 0.8118 0.7647 1.0" />
  </material>

  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0" />
  </material>

  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0" />
  </material>
  <link name="base_footprint" />

  <joint name="base_joint" type="fixed">
    <parent link="base_footprint" />
    <child link="base_link" />
    <origin xyz="0 0 ${(wheel_radius+wheel_zoff)}" rpy="0 0 0" />
  </joint>

  <!-- base link -->
  <link name="base_link">
    <visual>
      <origin xyz="0.0 0.025 0.0" rpy="${pi/2} 0 ${-pi/2}" />
      <geometry>
        <mesh filename="package://nav2_sample/meshes/robot_base.STL" scale="1.0 1.0 1.0"/>
      </geometry>
      <material name="white" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${base_length} ${base_width} 0.3"/>
      </geometry>
    </collision>
    <xacro:box_inertia m="20.0" w="${base_width}" d="${base_length}" h="${base_height}"/>
  </link>

  <!-- laser joint -->
  <joint name="laser_joint" type="fixed">
    <parent link="base_link" />
    <child link="laser_link" />
    <origin xyz="0.0 0.25 0.25" />
  </joint>

  <!-- laser link -->
  <link name="laser_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <cylinder length="0.02" radius="0.02" />
      </geometry>
      <material name="black" />
    </visual>
    <xacro:cylinder_inertia m="0.02" r="0.02" h="0.02"/>
  </link>

  <!-- imu joint -->
  <joint name="imu_joint" type="fixed">
    <parent link="laser_link" />
    <child link="imu_link" />
    <origin xyz="0 0 0.01" />
  </joint>

  <link name="imu_link">
    <visual>
      <origin xyz="0 0 0.0" rpy="0 0 0" />
      <geometry>
        <box size="0.02 0.02 0.02" />
      </geometry>
      <material name="orange" />
    </visual>
    <xacro:box_inertia m="0.01" w="0.02" d="0.02" h="0.02"/>
  </link>

  <xacro:wheel prefix="left_wheel" x_reflect="-1" y_reflect="1" />
  <xacro:wheel prefix="right_wheel" x_reflect="-1" y_reflect="-1" />

  <xacro:small_wheel prefix="left_small_wheel" x_reflect="-1" y_reflect="1" />
  <xacro:small_wheel prefix="right_small_wheel" x_reflect="-1" y_reflect="-1"/>

  <!-- a rabbit -->
  <joint name="base_rabbit_joint" type="fixed">
    <parent link="base_link" />
    <child link="rabbit_link" />
    <origin xyz="-0.2 0 -0.08" />
  </joint>
  <link name="rabbit_link">
    <xacro:property name="rabbit_scale" value="3" />
    <visual>
      <origin xyz="0 0 0.0" rpy="${pi/2} 0 ${pi/2}" />
      <geometry>
        <mesh filename="package://nav2_sample/meshes/rabbit.STL" scale="${rabbit_scale} ${rabbit_scale*1.2} ${rabbit_scale}"/>
      </geometry>
      <material name="orange" />
    </visual>
    <xacro:box_inertia m="40.0" w="0.2" d="0.2" h="0.5"/>
  </link>

</robot>