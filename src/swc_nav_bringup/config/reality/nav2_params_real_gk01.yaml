amcl:
  ros__parameters:
    use_sim_time: False
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    base_frame_id: "base_footprint"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 100.0
    laser_min_range: -1.0
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 2000
    min_particles: 500
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 1.0
    update_min_a: 0.2
    update_min_d: 0.25
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    scan_topic: scan

bt_navigator:
  ros__parameters:
    use_sim_time: False
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odom
    bt_loop_duration: 10
    default_server_timeout: 20
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_smooth_path_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_assisted_teleop_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_drive_on_heading_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_globally_updated_goal_condition_bt_node
      - nav2_is_path_valid_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_truncate_path_local_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_path_expiring_timer_condition
      - nav2_distance_traveled_condition_bt_node
      - nav2_single_trigger_bt_node
      - nav2_goal_updated_controller_bt_node
      - nav2_is_battery_low_condition_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_remove_passed_goals_action_bt_node
      - nav2_planner_selector_bt_node
      - nav2_controller_selector_bt_node
      - nav2_goal_checker_selector_bt_node
      - nav2_controller_cancel_bt_node
      - nav2_path_longer_on_approach_bt_node
      - nav2_wait_cancel_bt_node
      - nav2_spin_cancel_bt_node
      - nav2_back_up_cancel_bt_node
      - nav2_assisted_teleop_cancel_bt_node
      - nav2_drive_on_heading_cancel_bt_node
      - nav2_is_battery_charging_condition_bt_node

bt_navigator_navigate_through_poses_rclcpp_node:
  ros__parameters:
    use_sim_time: False

bt_navigator_navigate_to_pose_rclcpp_node:
  ros__parameters:
    use_sim_time: False

controller_server:
  ros__parameters:
    use_sim_time: False
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"] # "precise_goal_checker"
    controller_plugin_types: ["teb_local_planner::TebLocalPlannerROS"]
    controller_plugins: ["FollowPath"]

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0
    # Goal checker parameters
    #precise_goal_checker:
    #  plugin: "nav2_controller::SimpleGoalChecker"
    #  xy_goal_tolerance: 0.25
    #  yaw_goal_tolerance: 0.25
    #  stateful: True
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25
    
    FollowPath:
      plugin: teb_local_planner::TebLocalPlannerROS
      # https://github.com/rst-tu-dortmund/teb_local_planner/tree/ros2-master
      
      # 1、机器人配置参数
      acc_lim_x: 0.2 # double, default:0.5 机器人的最大平移加速度（米/秒^2）
      acc_lim_theta: 0.2 # double, default:0.5 机器人的最大角加速度（以弧度/秒^2为单位）
      max_vel_x: 0.2 # double, default:0.4 机器人的最大平移速度（米/秒）
      max_vel_x_backwards: 0.2 # double, default:0.2 机器人向后行驶时的最大绝对平移速度（以米/秒为单位）。查看优化参数 weight_kinematics_forward_drive
      max_vel_theta: 0.2 # double, default:0.3 机器人的最大角速度（弧度/秒）
      # 以下参数仅与车载机器人相关：
      min_turning_radius: 0.0 # double, default:0.0 # 汽车机器人的最小转弯半径（对于差速驱动机器人设置为零）。
      wheelbase: -0.7 # double, default:1.0 
      # 后轴与前轴之间的距离。对于后轮机器人，该值可能为负（仅当 cmd_angle_instead_rotvel 被设定为 true ）。
      cmd_angle_instead_rotvel: true 
      # bool, default:false 将命令速度消息中的旋转速度替换为相应的转向角 [-pi/2,pi/2]。
      # 请注意，根据应用改变偏航率的语义并不是可取的。在这里，它仅符合舞台模拟器所需的输入。 
      # ackermann_msgs中的数据类型更合适，但 move_base 不支持。本地规划器本身并不打算发送命令。

      # 以下参数与用于优化的足迹模型相关（请参阅教程避障和机器人足迹模型）。 0.3版本新增
      footprint_model:
        type: "point" # string, default:"point" # 指定用于优化的机器人足迹模型类型。不同的类型有“点”、“圆”、“线”、“双圆”和“多边形”。模型的类型显着影响所需的计算时间。
        radius: 0.2 # double, default:0.2 此参数仅与“圆形”类型相关。它包含圆的半径。圆的中心位于机器人的旋转轴处。
        line_start: [-0.3, 0.0] #(double[2], default: [-0.3, 0.0]) # 此参数仅与“line”类型相关。它包含线段的起始坐标。
        line_end: [0.3, 0.0] # (double[2], default: [0.3, 0.0]) # 此参数仅与“line”类型相关。它包含线段的结束坐标。
        front_offset: 0.2 # double, default:0.2 此参数仅与类型“two_circles”相关。它描述了前圆的中心沿机器人的 x 轴移动了多少。假设机器人的旋转轴位于[0,0]。
        front_radius: 0.2 # double, default:0.2 此参数仅与类型“two_circles”相关。它包含前圆的半径。
        rear_offset: 0.2 # double, default:0.2 此参数仅与类型“two_circles”相关。它描述了后圆的中心沿着机器人的负 x 轴移动了多少。假设机器人的旋转轴位于[0,0]。
        rear_radius: 0.2 # double, default:0.2 此参数仅与类型“two_circles”相关。它包含后圆的半径。
        # vertices: (double[], default: [ [0.25,-0.05], [...], ...])
      # 此参数仅与“多边形”类型相关。它包含多边形顶点列表（每个顶点都有二维坐标）。多边形始终是闭合的：末尾不重复第一个顶点。
      is_footprint_dynamic: false # bool, default:false 如果为真，则在检查轨迹可行性之前更新足迹

      # 2、目标容差参数
      xy_goal_tolerance: 0.2 # double, default:0.2
      # 允许到目标位置的最终欧氏距离（以米为单位）
      yaw_goal_tolerance: 0.2 # double, default:0.2 允许的最终方向误差（以弧度为单位）
      free_goal_vel: false # bool, default:false 去除目标速度约束，使机器人能够以最大速度到达目标

      # 3、轨迹配置参数
      dt_ref: 0.3 # double, default:0.3
      # 轨迹所需的时间分辨率（轨迹未固定为 dt_ref 因为时间分辨率是优化的一部分，但如果违反dt_ref +-dt_hysteresis，轨迹将在迭代之间调整大小。
      dt_hysteresis: 0.1 # double, default:0.1 根据当前时间分辨率自动调整大小的滞后，通常约为。 10%的 dt_ref 被推荐
      min_samples: 3 # int, default:3 最小样本数（应始终大于 2）
      global_plan_overwrite_orientation: true # bool, default:true 覆盖全局规划器提供的局部子目标的方向（因为它们通常仅提供 2D 路径）
      global_plan_viapoint_sep: -0.1 
      # (double, default: -0.1 (disabled)) # 如果为正，则从全局计划中提取途经点（路径跟踪模式）。
      # 该值确定参考路径的分辨率（沿全局规划的每两个连续经由点之间的最小间隔，如果为负值：禁用）。
      # 参考参数 weight_viapoint 用于调整强度。 0.4版本新增
      max_global_plan_lookahead_dist: 3.0 # double, default:3.0 指定考虑优化的全局计划子集的最大长度（累积欧几里德距离）。实际长度由本地成本图大小和该最大界限的逻辑与确定。设置为零或负数以停用此限制。
      force_reinit_new_goal_dist: 1.0 # double, default:1.0 如果之前的目标更新后的间隔超过指定值（以米为单位），则重新初始化轨迹（跳过热启动）
      feasibility_check_no_poses: 4 # int, default:4 指定每个采样间隔应检查预测计划上的哪个位姿的可行性。
      publish_feedback: false # bool, default:false 发布包含完整轨迹和活动障碍物列表的规划器反馈（应仅在评估或调试时启用）。请参阅上面的出版商列表。
      shrink_horizon_backup: true # bool, default:true 允许规划者在自动检测到问题（例如不可行）的情况下暂时缩小范围（50%）。另请参阅参数 shrink_horizon_min_duration 。

      # 4、障碍物参数
      min_obstacle_dist: 0.5 # double, default:0.5
      # 与障碍物的最小期望距离（以米为单位）
      include_costmap_obstacles: true # bool, default:true 指定是否应考虑本地成本图的障碍。每个被标记为障碍物的单元格都被视为点障碍物。因此，不要选择非常小的代价图分辨率，因为它会增加计算时间。在未来的版本中，这种情况将得到解决，并为动态障碍提供额外的 api。
      costmap_obstacles_behind_robot_dist: 1.0 # double, default:1.0 限制机器人后面规划时考虑的占用的本地成本图障碍（指定距离以米为单位）。
      obstacle_poses_affected: 30 
      # int, default:30 每个障碍物位置都附加到轨迹上最近的姿势以保持距离。还可以考虑其他邻居。
      # 请注意，该参数可能会在未来版本中删除，因为障碍物关联策略已在kinetic+中进行了修改。参见参数说明 legacy_obstacle_association 。
      # ~<name>/inflation_dist (double, default: pre kinetic: 0.0, kinetic+: 0.6)
      # 障碍物周围具有非零惩罚成本的缓冲区（应大于 min_obstacle_dist 以便生效）。另请参阅重量 weight_inflation 。

      # 仅当需要costmap_converter插件时，以下参数才相关（请参阅教程）：
      costmap_converter_plugin: "" # string, default:""
      # 定义插件名称，以便将成本图单元转换为点/线/多边形。设置一个空字符串以禁用转换，以便所有单元格都被视为点障碍物。
      costmap_converter_spin_thread: true # bool, default:true 如果设置为 true，成本图转换器将在不同的线程中调用其回调队列。
      costmap_converter_rate: 5.0 # double, default:5.0 定义costmap_converter插件处理当前costmap的频率的速率（该值不应比costmap更新速率高很多）[以Hz为单位]。

      # 5、Optimization Parameters 优化参数
      no_inner_iterations: 5 # int, default:5 每次外循环迭代中调用的实际求解器迭代次数。参见参数 no_outer_iterations 。
      no_outer_iterations: 4 # int, default:4 每次外循环迭代都会根据所需的时间分辨率自动调整轨迹的大小 dt_ref 并调用内部优化器（执行 no_inner_iterations ）。因此，每个规划周期中求解器迭代的总数是两个值的乘积。
      penalty_epsilon: 0.1 # double, default:0.1 为硬约束近似的惩罚函数添加一个小的安全裕度
      weight_max_vel_x: 2.0 # double, default:2.0 满足最大允许平移速度的优化权重
      weight_max_vel_theta: 1.0 # double, default:1.0 满足最大允许角速度的优化权重
      weight_acc_lim_x: 1.0 # double, default:1.0 满足最大允许平移加速度的优化权重
      weight_acc_lim_theta: 1.0 # double, default:1.0 满足最大允许角加速度的优化权重
      weight_kinematics_nh: 1000.0 # double, default:1000.0 满足非完整运动学的优化权重（该参数必须很高，因为运动学方程构成等式约束，即使值为 1000 也不意味着由于“原始”成本值与其他成本相比较小而导致矩阵条件不好） 。
      weight_kinematics_forward_drive: 1.0 # double, default:1.0 用于迫使机器人仅选择前进方向（正平移速度）的优化权重。较小的重量（例如 1.0）仍然允许向后行驶。 1000 左右的值几乎可以防止向后行驶（但不能保证）。
      weight_kinematics_turning_radius: 1.0 # double, default:1.0 用于执行最小转弯半径的优化权重（仅适用于车载机器人）。
      weight_optimaltime: 1.0 # double, default:1.0 用于收缩相对于转换/执行时间的轨迹的优化权重
      weight_obstacle: 50.0 # double, default:50.0 优化重量以保持与障碍物的最小距离
      weight_viapoint: 1.0 # double, default:1.0 用于最小化到过点（或参考路径）的距离的优化权重。 0.4版本新增
      weight_inflation: 0.1 # double, default:0.1 通货膨胀惩罚的优化权重（应该很小）。

      # 6、Parallel Planning in distinctive Topologies 独特拓扑中的并行规划
      enable_homotopy_class_planning: true # bool, default:true # 在独特的拓扑中激活并行规划（需要更多的 CPU 资源，因为同时优化多个轨迹）
      enable_multithreading: true # bool, default:true 激活多线程以便在不同线程中规划每个轨迹
      max_number_classes: 4 # int, default:4 指定考虑的独特轨迹的最大数量（限制计算量）
      selection_cost_hysteresis: 1.0 # double, default:1.0 指定新候选者必须具有多少轨迹成本才能被选择（如果 new_cost < old_cost*factor 则选择）。
      selection_obst_cost_scale: 100.0 # double, default:100.0 障碍成本项的额外缩放只是为了选择“最佳”候选者。
      selection_viapoint_cost_scale: 1.0 # double, default:1.0 额外缩放经过点成本项只是为了选择“最佳”候选者。 0.4版本新增
      selection_alternative_time_cost: false # bool, default:false 如果为 true，则时间成本（时间差的平方和）将替换为总转换时间（时间差的总和）。
      roadmap_graph_no_samples: 15 # int, default:15 指定为创建路线图而生成的样本数量
      roadmap_graph_area_width: 6.0 # double, default:6 在起点和目标之间的矩形区域中对随机关键点/路径点进行采样。指定该区域的宽度（以米为单位）。
      h_signature_prescaler: 1.0 # double, default:1.0 用于区分同伦类的尺度内部参数（ H-signature ）。警告：仅减少此参数，如果您观察到局部成本图中障碍物过多的问题，请不要选择极低的值，否则无法区分障碍物（0.2<值<=1）。
      h_signature_threshold: 0.1 # double, default:0.1 如果实数部分和复数部分的差值均低于指定阈值，则假定两个 H 签名相等。
      obstacle_heading_threshold: 1.0 # double, default:1.0 指定障碍物航向和目标航向之间的标量积的值，以便在探索时将它们（障碍物）考虑在内。
      visualize_hc_graph: false # bool, default:false 可视化为探索独特轨迹而创建的图表（检查 rviz 中的标记消息）
      viapoints_all_candidates: true # bool, default:true 如果为真，则不同拓扑的所有轨迹都附加到一组via-point，否则只有与初始/全局计划共享相同拓扑的轨迹与它们连接（对test_optim_node没有影响）。 0.4版本新增

      # 7、Miscellaneous Parameters 其他参数
      odom_topic: "odom" # string, default:"odom" 里程计消息的主题名称，由机器人驱动程序或模拟器提供。
      map_frame: "map" # string, default:"odom" 全局规划框架（如果是静态地图，该参数通常必须更改为“/map”。

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: odom
      robot_base_frame: base_link
      use_sim_time: False
      rolling_window: true
      width: 8
      height: 12
      resolution: 0.05
      footprint: "[[0.6, 0.4], [0.6, -0.4], [-0.6, -0.4], [-0.6, 0.4]]" 
      plugins: ["voxel2d_layer_s2", "voxel2d_layer_ms200","voxel2d_layer_mid360", "inflation_layer"]
      voxel2d_layer_s2:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        observation_sources: scan
        scan:
          topic: /scan_s2_filter
          raytrace_max_range: 6.0
          obstacle_max_range: 6.0
          obstacle_min_range: 0.1
          max_obstacle_height: 2.0
          clearing: true
          marking: true
          inf_is_valid: true
          data_type: "LaserScan"
      voxel2d_layer_ms200:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        observation_sources: scan
        scan:
          topic: /scan_ms200_filter
          raytrace_max_range: 6.0
          obstacle_max_range: 6.0
          obstacle_min_range: 0.1
          max_obstacle_height: 2.0
          clearing: true
          marking: true
          inf_is_valid: true
          data_type: "LaserScan"
      
      voxel2d_layer_mid360:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        observation_sources: scan
        scan:
          topic: /scan
          raytrace_max_range: 6.0
          obstacle_max_range: 6.0
          obstacle_min_range: 0.1
          max_obstacle_height: 2.0
          clearing: true
          marking: true
          inf_is_valid: true
          data_type: "LaserScan"
      
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.55
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      always_send_full_costmap: True

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: False
      footprint: "[[0.6, 0.4], [0.6, -0.4], [-0.6, -0.4], [-0.6, 0.4]]" 
      resolution: 0.05
      track_unknown_space: true
      plugins: ["static_layer", "stvl_layer", "inflation_layer"]
      stvl_layer:
        plugin: "spatio_temporal_voxel_layer/SpatioTemporalVoxelLayer"
        # https://github.com/SteveMacenski/spatio_temporal_voxel_layer
        enabled:                  true
        voxel_decay:              0.5                               # 如果是线性衰减，单位为秒；如果是指数衰减，则为 e 的 n 次方
        decay_model:              0                                 # 衰减模型，0=线性，1=指数，-1=持久
        voxel_size:               0.05                              # 每个体素的尺寸，单位为米
        track_unknown_space:      true                              # default space is unknown
        mark_threshold:           0                                 # voxel height
        update_footprint_enabled: true
        combination_method:       1                                 # 1=max, 0=override
        origin_z:                 0.0                               # 单位为米
        publish_voxel_map:        true                              # default false, 是否发布体素地图
        transform_tolerance:      0.2                               # 单位为秒
        mapping_mode:             false                             # default off, saves map not for navigation
        map_save_duration:        60.0                              # default 60s, how often to autosave
        observation_sources:      livox_mark livox_clear
        livox_mark:
          data_type: PointCloud2
          topic: /segmentation/obstacle
          marking: true
          clearing: false
          obstacle_range: 3.0                                       # meters
          min_obstacle_height: 0.2                                  # default 0, meters
          max_obstacle_height: 2.0                                  # default 3, meters
          expected_update_rate: 0.0                                 # default 0, if not updating at this rate at least, remove from buffer
          observation_persistence: 0.0                              # default 0, use all measurements taken during now-value, 0=latest
          inf_is_valid: false                                       # default false, for laser scans
          filter: "voxel"                                           # default passthrough, apply "voxel", "passthrough", or no filter to sensor data, recommend on
          voxel_min_points: 0                                       # default 0, minimum points per voxel for voxel filter
          clear_after_reading: true                                 # default false, clear the buffer after the layer gets readings from it
        livox_clear:
          enabled: true                                             # default true, can be toggled on/off with associated service call
          data_type: PointCloud2
          topic: /segmentation/obstacle
          marking: false
          clearing: true
          max_z: 8.0                                                # default 10, meters
          min_z: 1.0                                                # default 0, meters
          vertical_fov_angle: 1.029                                 # 垂直视场角，单位为弧度，For 3D lidars it's the symmetric FOV about the planar axis.
          vertical_fov_padding: 0.05                                # 3D Lidar only. Default 0, in meters
          horizontal_fov_angle: 6.29                                # 3D 激光雷达水平视场角
          decay_acceleration: 5.0                                   # default 0, 1/s^2.
          model_type: 1                                             # 0=深度相机，1=3D激光雷达
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.55
      always_send_full_costmap: True

map_server:
  ros__parameters:
    use_sim_time: False
    # Overridden in launch by the "map" launch configuration or provided default value.
    # To use in yaml, remove the default "map" value in the tb3_simulation_launch.py file & provide full path to map below.
    yaml_filename: ""

map_saver:
  ros__parameters:
    use_sim_time: False
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: False
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: false
      allow_unknown: true

smoother_server:
  ros__parameters:
    use_sim_time: False
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"
    global_frame: odom
    robot_base_frame: base_link
    transform_tolerance: 0.1
    use_sim_time: False
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

robot_state_publisher:
  ros__parameters:
    use_sim_time: False

waypoint_follower:
  ros__parameters:
    use_sim_time: False
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200

velocity_smoother:
  ros__parameters:
    use_sim_time: False
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    max_velocity: [0.26, 0.0, 0.26]
    min_velocity: [-0.26, 0.0, -0.26]
    max_accel: [2.5, 0.0, 3.2]
    max_decel: [-2.5, 0.0, -3.2]
    odom_topic: "odom"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0
